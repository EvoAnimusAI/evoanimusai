./executor.py:100:                log_event("EXECUTOR", "Persisting symbolic rules...", level="INFO")
./executor.py:105:            log_event("EXECUTOR", "Triggering rule mutation...", level="DEBUG")
./executor.py:107:            log_event("rule_mutation", status="executed")
./executor.py:111:            log_event("EXECUTOR", "Evaluating function mutation...", level="DEBUG")
./executor.py:113:            log_event("function_mutation", status="evaluated")
./executor.py:118:            log_event("EXECUTOR", f"High entropy ({entropy:.2f}) — triggering hypermutation...", level="INFO")
./executor.py:123:                    log_event("EXECUTOR", "Hypermutation applied to 'decide'.", level="INFO")
./executor.py:124:                    log_event("hypermutation", status="completed")
./executor.py:126:                log_event("EXECUTOR", f"Hypermutation error: {e}", level="ERROR")
./executor.py:127:                log_event("hypermutation", status="error", detail=str(e))
./executor.py:129:            log_event("EXECUTOR", f"Entropy ({entropy:.2f}) below threshold. No hypermutation.", level="DEBUG")
./executor.py:142:            log_event("EXECUTOR", f"Contextual stop triggered: {reasons}", level="INFO")
./executor.py:153:            log_event("EXECUTOR", f"Repeated action '{decision}' — forcing exploration.", level="INFO")
./executor.py:159:            log_event("EXECUTOR", "Forced exploration mode active.", level="INFO")
./executor.py:164:            log_event("EXECUTOR", f"Executing action: {decision} — {desc}", level="INFO")
./executor.py:167:            log_event("EXECUTOR", f"Unknown symbolic action: {decision}", level="WARNING")
./executor.py:175:            log_event("EXECUTOR", f"Updated rule: {rule} with reward={reward}", level="DEBUG")
./executor.py:177:            log_event("EXECUTOR", f"No matching rule for action '{decision}'", level="DEBUG")
./executor.py:179:            log_event("EXECUTOR", "Engine missing 'update_rule' method.", level="WARNING")
./executor.py:193:        log_event("EXECUTOR", f"Action '{decision}' not implemented.", level="WARNING")
./executor.py:197:        log_event("EXECUTOR", "Exploring symbolic space...", level="INFO")
./executor.py:200:        log_event("EXECUTOR", "Waiting for symbolic signals...", level="INFO")
./executor.py:204:        log_event("EXECUTOR", "Reducing internal noise...", level="INFO")
./executor.py:207:        log_event("EXECUTOR", "Advancing symbiotically...", level="INFO")
./executor.py:212:            log_event("EXECUTOR", "Symbiotic threshold reached. Triggering adaptation.", level="INFO")
./executor.py:218:            log_event("ENGINE", "Initiating symbolic rule adaptation...", level="INFO")
./executor.py:221:                log_event("EXECUTOR", "Adaptation executed successfully.", level="INFO")
./executor.py:222:                log_event("ENGINE", "Symbolic engine adapted rules successfully.")
./executor.py:224:                log_event("EXECUTOR", "Adaptation returned no changes. Triggering fallback.", level="WARNING")
./executor.py:227:            log_event("EXECUTOR", f"Adaptation failed: {e}", level="ERROR")
./executor.py:233:            log_event("EXECUTOR", "Fallback adaptation completed.", level="INFO")
./executor.py:235:            log_event("EXECUTOR", f"Fallback adaptation failed: {e}", level="ERROR")
./executor.py:44:                log_event("EXECUTOR", f"Step {step}/{steps} started.", level="DEBUG")
./executor.py:48:                        log_event("EXECUTOR", "Execution terminated by environment.", level="INFO")
./executor.py:54:            log_event("EXECUTOR", "Execution manually interrupted.", level="WARNING")
./executor.py:57:            log_event("EXECUTOR", f"Autonomous stop triggered: {si}", level="INFO")
./executor.py:60:            log_event("EXECUTOR", f"Unexpected error: {exc}", level="ERROR")
./executor.py:61:            log_event("TRACEBACK", traceback.format_exc(), level="ERROR")
./executor.py:69:            log_event("EXECUTOR", "Saving symbolic rules...", level="INFO")
./executor.py:72:            log_event("EXECUTOR", "Symbolic engine not available or rules not savable.", level="WARNING")
./fix_log_event.diff:6:-    log_event("ENGINE", "Initiating symbolic rule adaptation...", level="INFO")
./fix_log_event.diff:7:+    log_event("EXECUTOR", "Initiating symbolic rule adaptation...", level="INFO")
./runtime/executor.py:107:                log_event("EXECUTOR", "Persisting symbolic rules...", level="INFO")
./runtime/executor.py:112:            log_event("EXECUTOR", "Triggering rule mutation...", level="DEBUG")
./runtime/executor.py:114:            log_event("rule_mutation", status="executed")
./runtime/executor.py:118:            log_event("EXECUTOR", "Evaluating function mutation...", level="DEBUG")
./runtime/executor.py:120:            log_event("function_mutation", status="evaluated")
./runtime/executor.py:125:            log_event("EXECUTOR", f"High entropy ({entropy:.2f}) — triggering hypermutation...", level="INFO")
./runtime/executor.py:130:                    log_event("EXECUTOR", "Hypermutation applied to 'decide'.", level="INFO")
./runtime/executor.py:131:                    log_event("hypermutation", status="completed")
./runtime/executor.py:133:                log_event("EXECUTOR", f"Hypermutation error: {e}", level="ERROR")
./runtime/executor.py:134:                log_event("hypermutation", status="error", detail=str(e))
./runtime/executor.py:136:            log_event("EXECUTOR", f"Entropy ({entropy:.2f}) below threshold. No hypermutation.", level="DEBUG")
./runtime/executor.py:149:            log_event("EXECUTOR", f"Contextual stop triggered: {reasons}", level="INFO")
./runtime/executor.py:160:            log_event("EXECUTOR", f"Repeated action '{decision}' — forcing exploration.", level="INFO")
./runtime/executor.py:166:            log_event("EXECUTOR", "Forced exploration mode active.", level="INFO")
./runtime/executor.py:171:            log_event("EXECUTOR", f"Executing action: {decision} — {desc}", level="INFO")
./runtime/executor.py:174:            log_event("EXECUTOR", f"Unknown symbolic action: {decision}", level="WARNING")
./runtime/executor.py:182:            log_event("EXECUTOR", f"Updated rule: {rule} with reward={reward}", level="DEBUG")
./runtime/executor.py:184:            log_event("EXECUTOR", f"No matching rule for action '{decision}'", level="DEBUG")
./runtime/executor.py:186:            log_event("EXECUTOR", "Engine missing 'update_rule' method.", level="WARNING")
./runtime/executor.py:200:        log_event("EXECUTOR", f"Action '{decision}' not implemented.", level="WARNING")
./runtime/executor.py:204:        log_event("EXECUTOR", "Exploring symbolic space...", level="INFO")
./runtime/executor.py:207:        log_event("EXECUTOR", "Waiting for symbolic signals...", level="INFO")
./runtime/executor.py:211:        log_event("EXECUTOR", "Reducing internal noise...", level="INFO")
./runtime/executor.py:214:        log_event("EXECUTOR", "Advancing symbiotically...", level="INFO")
./runtime/executor.py:219:            log_event("EXECUTOR", "Symbiotic threshold reached. Triggering adaptation.", level="INFO")
./runtime/executor.py:225:            log_event("ENGINE", "Initiating symbolic rule adaptation...", level="INFO")
./runtime/executor.py:228:                log_event("EXECUTOR", "Adaptation executed successfully.", level="INFO")
./runtime/executor.py:229:                log_event("ENGINE", "Symbolic engine adapted rules successfully.")  # ← LÍNEA CRUCIAL
./runtime/executor.py:231:                log_event("EXECUTOR", "Adaptation returned no changes. Triggering fallback.", level="WARNING")
./runtime/executor.py:234:            log_event("EXECUTOR", f"Adaptation failed: {e}", level="ERROR")
./runtime/executor.py:240:            log_event("EXECUTOR", "Fallback adaptation completed.", level="INFO")
./runtime/executor.py:242:            log_event("EXECUTOR", f"Fallback adaptation failed: {e}", level="ERROR")
./runtime/executor.py:51:                log_event("EXECUTOR", f"Step {step}/{steps} started.", level="DEBUG")
./runtime/executor.py:55:                        log_event("EXECUTOR", "Execution terminated by environment.", level="INFO")
./runtime/executor.py:61:            log_event("EXECUTOR", "Execution manually interrupted.", level="WARNING")
./runtime/executor.py:64:            log_event("EXECUTOR", f"Autonomous stop triggered: {si}", level="INFO")
./runtime/executor.py:67:            log_event("EXECUTOR", f"Unexpected error: {exc}", level="ERROR")
./runtime/executor.py:68:            log_event("TRACEBACK", traceback.format_exc(), level="ERROR")
./runtime/executor.py:76:            log_event("EXECUTOR", "Saving symbolic rules...", level="INFO")
./runtime/executor.py:79:            log_event("EXECUTOR", "Symbolic engine not available or rules not savable.", level="WARNING")
./runtime/rule_adaptation.py:17:    log_event("ENGINE", "Initiating symbolic rule adaptation...", level="INFO")
./runtime/rule_adaptation.py:24:                log_event("ENGINE", "Mutation performed during adaptation.", level="INFO")
./runtime/rule_adaptation.py:27:                log_event("ENGINE", f"Mutation failed: {e}", level="ERROR")
./runtime/rule_adaptation.py:30:            log_event("ENGINE", "No valid mutate_rules() method found.", level="WARNING")
./runtime/rule_adaptation.py:32:        log_event("ENGINE", f"No mutation: chance {mutation_chance:.2f} not met.", level="DEBUG")
./runtime/rule_adaptation.py:45:    log_event("ENGINE", "Executing fallback adaptation...", level="INFO")
./strategies/strategy_manager.py:100:            log_event("STRATEGY_CREATED", strategy_name)
./strategies/strategy_manager.py:104:            log_event("ERROR_GENERATING_STRATEGY", traceback.format_exc())
./strategies/strategy_manager.py:127:                log_event("ERROR_LOADING_STRATEGY", f"Función '{module_name}' no encontrada o no callable en {file_path}")
./strategies/strategy_manager.py:131:            log_event("STRATEGY_LOADED", module_name)
./strategies/strategy_manager.py:136:            log_event("ERROR_LOADING_STRATEGY", traceback.format_exc())
./strategies/strategy_manager.py:160:            log_event("ERROR_EVALUATING_STRATEGY", traceback.format_exc())
./strategies/strategy_manager.py:182:            log_event("STRATEGY_EVALUATED", f"{name} → {score:.4f}")
./strategies/strategy_manager.py:207:                        log_event("STRATEGY_REMOVED", f"Archivo eliminado: {path}")
./strategies/strategy_manager.py:209:                    log_event("ERROR_REMOVING_STRATEGY", traceback.format_exc())
./strategies/strategy_manager.py:212:            log_event("STRATEGIES_PRUNED", f"Supervivientes: {len(survivors)}")
./strategies/strategy_manager.py:215:            log_event("ERROR_PRUNING_STRATEGIES", traceback.format_exc())
./strategies/strategy_manager.py:241:            log_event("LOG_SAVED", f"Log guardado en {log_path}")
./strategies/strategy_manager.py:243:            log_event("ERROR_SAVING_LOG", traceback.format_exc())
./strategies/strategy_manager.py:65:        log_event("STRATEGY_REGISTERED", f"{name} (manual)")
./tests/test_logging.py:18:    utils_logging.log_event("test_event", {"foo": "bar"})
./tests/test_logging.py:25:    utils_logging.log_event("simple_event")
./utils/logging.py:22:        log_event("user_login", {"user_id": 123}, level="WARNING")
./utils/logging.py:23:        log_event("update_ok", {}, level=logging.DEBUG)
./utils/observer.py:30:        log_event("observation", observation=self.state)
